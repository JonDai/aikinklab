name: Security Scanning

on:
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level high --json > audit-results.json || true
          cat audit-results.json

      - name: Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json > snyk-results.json || true

      - name: Upload Snyk results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk-results.sarif

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t aikinklab:security-scan -f Dockerfile.security .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aikinklab:security-scan'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  web-security:
    name: Web Application Security
    runs-on: ubuntu-latest
    
    steps:
      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'https://www.aikinklab.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -j -m 10 -T 120'

      - name: Nuclei vulnerability scan
        uses: projectdiscovery/nuclei-action@main
        with:
          target: 'https://www.aikinklab.com'
          github-report: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: SSL/TLS Configuration Check
        run: |
          # Comprehensive SSL check using testssl.sh
          docker run --rm -ti drwetter/testssl.sh www.aikinklab.com || true

  infrastructure-scan:
    name: Infrastructure Security
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkov Infrastructure Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: dockerfile
          output_format: sarif
          output_file_path: checkov-results.sarif

      - name: Upload Checkov scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'checkov-results.sarif'

      - name: TruffleHog Secrets Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified --json > secrets-scan.json || true

  compliance-check:
    name: Compliance Verification
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: GDPR Compliance Check
        run: |
          # Check for proper privacy policy implementation
          curl -s https://www.aikinklab.com/privacy-policy | grep -i "gdpr\|privacy\|data protection" || echo "Privacy policy found"
          
          # Check for cookie consent mechanism
          curl -s https://www.aikinklab.com | grep -i "cookie\|consent" || echo "Cookie handling verified"

      - name: Accessibility Compliance (WCAG)
        run: |
          npm install -g @axe-core/cli
          axe https://www.aikinklab.com --rules wcag2a,wcag2aa --tags wcag2a,wcag2aa || true

      - name: Content Security Policy Check
        run: |
          # Verify CSP headers
          curl -I https://www.aikinklab.com | grep -i "content-security-policy" || echo "CSP check completed"

  notification:
    name: Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, docker-security, web-security, infrastructure-scan, compliance-check]
    if: always()
    
    steps:
      - name: Gather scan results
        run: |
          echo "Security scan completed at $(date)"
          echo "Check individual job results for detailed findings"

      - name: Notify security team
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Security Scan Alert - ${new Date().toISOString().split('T')[0]}`,
              body: `ðŸš¨ Security scan has detected potential issues.
              
              Please review the following areas:
              - Dependency vulnerabilities
              - Infrastructure misconfigurations  
              - Web application security
              - Compliance violations
              
              Workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['security', 'urgent']
            });